<?php
/**
 * Slack API - team method implementation.
 *
 * @author        Hiroki Yagyu.
 * @link          https://github.com/HirokiYagyu/Slack
 * @package       Slack.Controller.Component
 * @since         SlackPlugin v1.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
App::uses('BaseComponent', 'Slack.Controller/Component');

/**
 * Slack API Team コンポーネント.
 *
 * @package       Slack.Controller.Component
 */
class TeamComponent extends BaseComponent
{
    protected static $_method = 'team';

    /** Authentication token. */
    const OPTION_TOKEN = 'token';

    /** Number of items to return per page. */
    const OPTION_COUNT = 'count';

    /** Page number of results to return. */
    const OPTION_PAGE = 'page';

    /** Filter logs to this service. Defaults to all logs. */
    const OPTION_SERVICE_ID = 'service_id';

    /** Filter logs to this API application. Defaults to all logs. */
    const OPTION_APP_ID = 'app_id';

    /** Filter logs generated by this user’s actions. Defaults to all logs. */
    const OPTION_USER = 'user';

    /** Filter logs with this change type. Defaults to all logs. */
    const OPTION_CHANGE_TYPE = 'change_type';

    /**
     * アクセスログを取得する.
     *
     * @param string $channel チャンネル名.
     * @param array $option オプション.
     * @return mixed レスポンスデータ.
     *
     * @see https://api.slack.com/methods/team.accessLogs
     */
    public function fetchAccessLogs( array $option=[] )
    {
        $requestData = [
            self::OPTION_TOKEN => Slack\API_TOKEN, // (Requires scope: admin)
            self::OPTION_COUNT => null,
            self::OPTION_PAGE => null,
        ];
        $requestData = array_merge( $requestData, $option );
        $response = self::getRequest( 'accessLogs', self::_nullFilter($requestData) );
        return $response;
    }

    /**
     * 情報を取得する.
     *
     * @param array $option オプション.
     * @return mixed レスポンスデータ.
     *
     * @see https://api.slack.com/methods/team.info
     */
    public function fetchInfo( array $option=[] )
    {
        $requestData = [
            self::OPTION_TOKEN => Slack\API_TOKEN, // (Requires scope: team:read)
        ];
        $requestData = array_merge( $requestData, $option );
        $response = self::getRequest( 'info', self::_nullFilter($requestData) );
        return $response;
    }

    /**
     * インテグレーションログを取得する.
     *
     * @param array $option オプション.
     * @return mixed レスポンスデータ.
     *
     * @see https://api.slack.com/methods/team.integrationLogs
     */
    public function fetchIntegrationLogs( array $option=[] )
    {
        $requestData = [
            self::OPTION_TOKEN => Slack\API_TOKEN, // (Requires scope: admin)
            self::OPTION_SERVICE_ID => null,
            self::OPTION_APP_ID => null,
            self::OPTION_USER => null,
            self::OPTION_CHANGE_TYPE => null,
            self::OPTION_COUNT => null,
            self::OPTION_PAGE => null,
        ];
        $requestData = array_merge( $requestData, $option );
        $response = self::getRequest( 'integrationLogs', self::_nullFilter($requestData) );
        return $response;
    }
}
